// A Class is like an object constructor, or a "blueprint" for creating objects.

The __init__() Function
    The examples above are classes and objects in their simplest form, and are not really useful in real life applications.

    To understand the meaning of classes we have to understand the built-in __init__() function.

    All classes have a function called __init__(), which is always executed when the class is being initiated.


Constructor
    a constructor is a special method that is called automatically when an object is created from a class.
    Its main role is to initialize the object by setting up its attributes or state.

__init__ Method
    This method initializes the newly created instance and is commonly used as a constructor in Python. 
    It is called immediately after the object is created by __new__ method. 
    It is responsible for initializing attributes of the instance.

__new__ Method
    This method is responsible for creating a new instance of a class. 
    It allocates memory and returns the new object. It is called before __init__.